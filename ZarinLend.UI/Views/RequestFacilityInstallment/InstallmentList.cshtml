@using Core.Entities.Business.Payment
@model List<SelectListItem>
@{
    ViewData["Title"] = "لیست درخواست ها";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}
@section styles{
    <style type="text/css">
        /*        .zl-app-content {
                                    padding-right: 1rem !important;
                                    padding-left: 1rem !important;
                                }*/
        .ipg-img {
            width: 70px;
            height: 70px;
            border-radius: 18px;
            border: 1px solid #e6dbdb;
            opacity: .35
        }
    </style>
}
<div id="requestGridDiv" class="p-2 bg-white rounded-lg">
    <div class="font-medium-3 secondary darken-4 text-bold-800 d-flex align-items-center">
        <i class="bx bx-align-right zl-text-secondary mr-25"></i>
        <span>اقساط من</span>
    </div>
    <div class=" pt-1 rounded-lg">
        <div class="row my-0 my-md-1">
            <div class=" col-md-5 col-sm-12">
                <div class="form-group">
                    <select id="drpApprovalFacility" class="form-control bg-transparent" asp-items="Model">
                        <option value="" >تسهیلات دریافتی</option>
                    </select>
                </div>
            </div>
        </div>
        <div>
            <table id="installmentList" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th >مبلغ قسط</th>
                        <th >تاریخ سررسید</th>
                        <th >تعداد روزهای دیرکرد</th>
                        <th >مبلغ دیرکرد</th>
                        <th >مبلغ کل(قسط + دیرکرد)</th>
                        <th >تاریخ پرداخت</th>
                        <th >وضعیت</th>
                        <th >عملیات</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<form id="frmPayment" method="post" action="">
    <div class="modal fade text-left" id="installmentPaymentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel18" style="display: none;" data-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-md" role="document">
            <div class="modal-content rounded-xl modal-md">
                <div class="modal-header">
                    <h4 class="modal-title dark" id="myModalLabel18">
                        پرداخت قسط
                    </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="بستن">
                        <i class="bx bx-x"></i>
                    </button>
                </div>
                <div class="modal-body line-height-2">
                    <div class="border rounded">
                        <div class="d-flex align-items-center p-1">
                            <span class="font-small-3 w-50 text-bold-500">مبلغ قسط(ريال)</span><span class="dark w-50 text-bold-400" id="amount"></span>
                        </div>
                        <hr class="my-0" />
                        <div class="d-flex align-items-center p-1">
                            <span class="font-small-3 w-50 text-bold-500">تعداد روزهای دیرکرد</span><span class="dark w-50 text-bold-400" id="penaltyDays"></span>
                        </div>
                        <hr class="my-0" />
                        <div class="d-flex align-items-center p-1">
                            <span class="font-small-2 w-50 text-bold-500">مبلغ دیرکرد(ريال)</span><span class="dark w-50 text-bold-400" id="penaltyAmount"></span>
                        </div>
                        <hr class="my-0" />
                        <div class="d-flex align-items-center p-1">
                            <span class="font-small-3 w-50 text-bold-500">جمع کل(مبلغ قسط + مبلغ دیرکرد)</span><span class="dark w-50 text-bold-400" id="totalAmount"></span>
                        </div>
                        <hr class="my-0" />
                        <div class="d-flex align-items-center p-1">
                            <span class="font-small-3 w-50 text-bold-500">مبلغ پرداختی(ريال)</span><span class="w-50 text-bold-900" style="color: #108885;font-size:1.1rem" id="amountForPay"></span>
                        </div>
                        <hr class="my-0" />
                        <div class="d-flex align-items-center p-1 justify-content-start">
                            <div class="w-50 font-small-2 text-bold-500">
                                <fieldset>
                                    <div class="radio radio-success radio-glow radio-sm">
                                        <img src="/images/ipg/saman.jpg" class="ipg-img" id="imgSaman" for="samanIpg" />
                                        <input type="radio" name="ipgRadio" id="samanIpg" value="1" />
                                        <label class="font-small-3 success darken-4 text-bold-400 line-height-23" for="samanIpg">درگاه سامان</label>
                                    </div>
                                </fieldset>
                            </div>
                           @*  <div class="w-50 secondary darken-4 text-bold-500">
                                <fieldset>
                                    <div class="radio radio-success radio-glow radio-sm">
                                        <img src="/images/ipg/zarinpal.png" class="ipg-img" id="imgZarinpal" for="zarinpalIpg" />
                                        <input type="radio" name="ipgRadio" id="zarinpalIpg" value="2" />
                                        <label class="font-small-3 success darken-4 text-bold-400 line-height-23" for="zarinpalIpg">درگاه زرین پال</label>
                                    </div>
                                </fieldset>
                            </div> *@
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="text-right">
                        <a href="#" class="btn btn-outline-secondary" data-dismiss="modal">
                            <span>انصراف</span>
                        </a>
                        <button id="btnPayment" disabled type="button" class="btn btn-zl-primary white">
                            <span>اتصال به درگاه و پرداخت</span>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section scripts{
    <script>
        let dataTableResponsive;
        let initialized = false;
        $(document).ready(function () {
            $('div').removeClass('zl-active');
            $('#myInstallment').addClass('zl-active');

            $('input[name=ipgRadio]').change((e) => {
                if ($(e.target).val() == '') {
                    $('#frmPayment').prop('action', '');
                    $('#btnPayment').prop('disabled', true);
                }
                else {
                    if ($(e.target).val() == @((int)IpgType.SamanIPG)) {
                        $('#imgSaman').css('opacity', 1);
                        $('#imgZarinpal').css('opacity', 0.35);
                    }
                    else {
                        $('#imgSaman').css('opacity', 0.35);
                        $('#imgZarinpal').css('opacity', 1);
                    }
                    $('#btnPayment').prop('disabled', false);
                }
            });

            $('#btnPayment').click((e) => {
                e.preventDefault();
                if ($('input[name=ipgRadio]:checked').length > 0) {
                    debugger;
                    const ipgType = $('input[name=ipgRadio]:checked').val();
                    const installmentId = $(e.currentTarget).data('installment-id');
                    $('#frmPayment').prop('action', `@Url.Action("PostInternetPaymentForInstallment", "Payment")/${installmentId}/${ipgType}`);
                    $('#frmPayment').submit();
                }
                else{
                    showMessage('اخطار', 'لطفا درگاه را انتخاب کنید', icons.warning, '@ResourceFile.Close');
                }
            });

            loadInstallmentData();
        });

        $('#drpApprovalFacility').change((e) => {
            if ($(e.target).val() == '') {
                if (dataTableResponsive != null) {
                    dataTableResponsive.clear().draw();
                }
            }
            else {
                if (dataTableResponsive != null) {
                    dataTableResponsive.page(0);
                    dataTableResponsive.ajax.reload(null, false);
                }
                else
                    loadInstallmentData();
            }
        });

        const loadInstallmentData = () => {
            dataTableResponsive = $('#installmentList')
                .on('preXhr.dt', function (e, settings, data, a, b) {
                    //trigger before ajax call
                    //debugger;
                    //alert('preXhr');
                    showWaiting('installmentList', '@ResourceFile.PleaseWait', '@ResourceFile.Loading');
                })
                .on('xhr.dt', function (e, settings, json, xhr) {
                    //trigger after ajax call
                    //debugger;
                    //alert('xhr');
                })
                .DataTable({
                    order: [],
                    processing: true,
                    serverSide: true,
                    responsive: true,
                    rowReorder: false,
                    select: true,
                    searching: false,
                    paging: false,
                    ordering: false,
                    searching: false,
                    filtering: false,
                    info: true,
                    //lengthMenu: [
                    //    [10, 25, 50, -1],
                    //    [10, 25, 50, 'همه']
                    //],
                    pageLength: -1,
                    columnDefs: [
                        //{ "visible": false, "targets": 0 },
                        //and in this case the < a href="//legacy.datatables.net/ref#bStateSave" > bStateSave</a> works regularly ....but then I would like to have responsive columns indicating responsive: {
                        {
                            details: false,
                            breakpoints: [
                                { name: 'desktop', width: Infinity },
                                { name: 'tablet-l', width: 1200 },
                                { name: 'tablet-p', width: 992 },
                                { name: 'mobile-l', width: 576 },
                                { name: 'mobile-p', width: 320 }
                            ]
                        },
                        {
                            targets: [0, 1, 2, 3, 4, 5, 6, 7, 8],
                            className: 'dt-center',
                        },
                        {
                            targets: 1,
                            render: function (data, type, row, meta) {
                                return splitNumber(data);
                            }
                        },
                        {
                            targets: 4,
                            render: function (data, type, row, meta) {
                                return splitNumber(data);
                            }
                        },
                        {
                            targets: 5,
                            render: function (data, type, row, meta) {
                                return splitNumber(data);
                            }
                        },
                        {
                            targets: 6,
                            render: function (data, type, row, meta) {
                                return (data != null ? data : '')
                            }
                        },
                        {
                            targets: 7,
                            render: function (data, type, row, meta) {
                                return `<div class="badge badge-pill ${data ? "zl-badge-deposited" : "zl-badge-reject"}">
                                             <div class="d-flex align-items-center"><i class="bx bxs-circle font-size-xxsmall mr-25"></i>${data ? "پرداخت شده" : "پرداخت نشده"}</div>
                                        </div>`;
                            }
                        },
                        {
                            targets: 8,
                            responsivePriority: 3,
                            data: { aa: 'bb' },
                            render: function (data, type, row, meta) {
                                return (data
                                    ? '<button class="btn btn-outline-secondary" disabled style="width:100px">پرداخت</button>'
                                    : '<button class="btn btn-outline-success pay-installment" id="payInstallment" style="width:100px">پرداخت</button>')
                            }
                        }],
                    rowCallback: function (row, data) {
                        //$('td:eq(0)', row).css('text-align', 'center');
                        //$('td', row).eq(1).css('color', 'red');
                    },
                    //ajax: {
                    //    url: `/api/v1/RequestFacilityInstallment/SelectInstallment2/${$('#drpApprovalFacility').val()}`,
                    //    type: 'POST',
                    //    dataSrc: function(data) {
                    //        data.recordsTotal = data.data.length;
                    //        data.recordsFiltered = data.data.length;
                    //        return data.data;
                    //    },
                    //    datatype: "json",
                    //    //contentType: "application/json",
                    //    contentType: "application/json; charset=utf-8",
                    //    data: function(input) {
                    //        debugger;
                    //        //if ($('#FacilityTypeId').val() != '')
                    //        //    input.FacilityTypeId = $('#FacilityTypeId').val();

                    //        return JSON.stringify(input);
                    //    },
                    //},
                    ajax: (data, callback, setting) => {
                        getInstallmentData(data).then(function (_data) {
                            callback(_data);
                        });
                    },
                    drawCallback: function (settings) {
                        debugger;
                        hideWaiting('installmentList');
                    },
                    initComplete: function (settings, json) {
                        initialized = true;
                        $('#installmentList tbody').on('click', 'button#payInstallment', function () {
                            debugger;
                            let data = dataTableResponsive.row(this).data();
                            if (data == undefined)
                                data = dataTableResponsive.row($(this).parents('tr')).data();
                            $('#btnSave').data('request-id', data.id);

                            $.ajax({
                                type: 'post',
                                //datatype: "json",
                                data: JSON.stringify('{}'),
                                contentType: "application/json; charset=utf-8",
                                url: `/api/v1/RequestFacilityInstallment/CheckExistUnpaidInstallmentBeforeThis/${data.id}`,
                                success: function (result) {
                                    hideWaiting('requestGridDiv');
                                    debugger;
                                    if (result != undefined && result.isSuccess == true) {
                                        if (result.data == null) {
                                            $('#amount').html(splitNumber(data.amount));
                                            $('#penaltyDays').html(data.penaltyDays);
                                            $('#penaltyAmount').html(splitNumber(data.penaltyAmount));
                                            $('#totalAmount').html(splitNumber(data.realPayAmount));
                                            $('#amountForPay').html(splitNumber(data.realPayAmount));
                                            $('#frmPayment').prop('action', '');
                                            $('#btnPayment').data('installment-id', data.id);
                                            $('#installmentPaymentModal').modal();
                                        }
                                        else {
                                            showMessage('@ResourceFile.InfoTitle', 'کاربر گرامی شما قسط تسویه نشده قبل از این قسط دارید<br/>لطفا قبل از پرداخت این مرحله از اقساط تسهیلات،اقدام به پرداخت اقساط ماه(های) گذشته نمایید!', icons.warning, '@ResourceFile.Close');
                                        }
                                    }
                                },
                                error: function (error) {
                                    debugger;
                                    hideWaiting('requestGridDiv');
                                    const exception = getExceptionMessageFromError(error);
                                    if (exception != null)
                                        showMessage('@ResourceFile.ErrorTitle', exception, icons.error, '@ResourceFile.Close');
                                    else
                                        showMessage('@ResourceFile.ErrorTitle', '@ResourceFile.UnhandledError', icons.error, '@ResourceFile.Close');
                                },
                                complete: function () {

                                },
                            });
                        });
                    },
                    rowCallback: (row, data, displayNum, displayIndex, dataIndex) => {
                        $('td:eq(0)', row).html(displayIndex + 1);
                        return row;
                    },
                    columns: [
                        //{
                        //    "data": "Id",
                        //    render: function (data, type, row, meta) {
                        //        return meta.settings.oAjaxData.start + meta.row + 1;
                        //    }
                        //},
                        //{
                        //    "data": "PersonFirstName",
                        //    render: function (data, type) {
                        //        //debugger;
                        //        //if (type === 'display') {
                        //        //    let link = 'http://datatables.net';

                        //        //    if (data[0] < 'H') {
                        //        //        link = 'http://cloudtables.com';
                        //        //    } else if (data[0] < 'S') {
                        //        //        link = 'http://editor.datatables.net';
                        //        //    }

                        //        //    return '<a href="' + link + '">' + data + '</a>';
                        //        //}

                        //        return data;
                        //    },
                        //},
                        { "data": null },
                        { "data": "amount" },
                        { "data": "shamsiDueDate" },
                        { "data": "penaltyDays" },
                        { "data": "penaltyAmount" },
                        { "data": "realPayAmount" },
                        { "data": "shamsiRealPayDate" },
                        { "data": "paid" },
                        { "data": "paid" }
                    ],
                    language: {
                        url: '/new-layout/datatables.net/fa.json'
                    }
                });

            const getInstallmentData = (data) => {
                debugger;
                return new Promise(function (resolve, reject) {
                    if (!initialized || $('#drpApprovalFacility').val() == '') {
                        resolve({
                            data: [],
                            recordsTotal: 0,
                            recordsFiltered: 0
                        });
                    }

                    console.log('Loading data');
                    if ($('#drpApprovalFacility').val() != '') {
                        $.ajax({
                            type: 'post',
                            datatype: "json",
                            data: JSON.stringify(data),
                            contentType: "application/json; charset=utf-8",
                            url: `/api/v1/RequestFacilityInstallment/SelectInstallment/${$('#drpApprovalFacility').val()}`,
                            success: function (result) {
                                debugger;
                                if (result != undefined && result.isSuccess == true) {
                                    resolve({
                                        data: result.data,
                                        recordsTotal: result.data.length,
                                        recordsFiltered: result.data.length
                                    });
                                }
                            },
                            error: function (error) {
                                debugger;
                                const exception = getExceptionMessageFromError(error);
                                if (exception != null)
                                    showMessage('@ResourceFile.ErrorTitle', exception, icons.error, '@ResourceFile.Close');
                                else
                                    showMessage('@ResourceFile.ErrorTitle', '@ResourceFile.UnhandledError', icons.error, '@ResourceFile.Close');
                            },
                            complete: function () {

                            },
                        });
                    }
                });
            }
        }
    </script>
}