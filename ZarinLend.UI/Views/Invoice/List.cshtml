@* @model Services.Model.Invoice.InvoiceImageUploadModel *@
@{
    ViewData["Title"] = "فاکتورها";
    Layout = "~/Views/Shared/_NewLayout.cshtml";
}
@section styles
{
    <style type="text/css">
    </style>
}
<div id="requestGridDiv" class="p-2 bg-white rounded-lg">
    <div class="font-medium-3 secondary darken-4 text-bold-800 d-flex align-items-center">
        <i class="bx bx-align-right zl-text-secondary mr-25"></i>
        <span>فاکتورها</span>
    </div>
    @{
        await Html.RenderPartialAsync("_SellerListPartial.cshtml", 10);
    }
</div>
@{
    await Html.RenderPartialAsync("_UploadInvoiceDocumentPartial.cshtml", new Services.Model.Invoice.InvoiceImageUploadModel());
}
@* <form id="frmUploadInvoiceDocument" method="post" enctype="multipart/form-data">
    <div class="modal fade text-left" id="uploadInvoiceDocumentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel18" style="display: none;" data-backdrop="static" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-md" role="document">
            <div class="modal-content rounded-lg modal-md">
                <div class="modal-header">
                    <h4 class="modal-title dark" id="myModalLabel18">
                        بارگذاری تصویر فاکتور
                    </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="بستن">
                        <i class="bx bx-x"></i>
                    </button>
                </div>
                <div class="modal-body line-height-2" id="modalContent">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label" asp-for="Number"></label>
                                <input asp-for="Number" class="form-control" style="text-align:center;direction:ltr" />
                                <span asp-validation-for="Number" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label">تصویر فاکتور</label>
                                <input type="file" asp-for="InvoiceFile" class="form-control" accept="image/*;capture=camera">
                                <span asp-validation-for="InvoiceFile" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="text-right">
                        <a href="#" class="btn btn-outline-secondary" data-dismiss="modal">
                            <span>انصراف</span>
                        </a>
                        <button id="btnSave" class="btn btn-outline-success" data-invoice-id="-1">
                            بارگذاری فاکتور&nbsp;<i class="fal fa-save"></i>
                        </button>
                        <button id="btnSaveAndVerifyInvoice" class="btn btn-outline-primary" data-invoice-id="-1">
                            بارگذاری فاکتور و ارسال جهت تسویه&nbsp;<i class="fal fa-save"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form> *@
@section scripts {
   @*  @{
        await Html.RenderPartialAsync("~/Views/Shared/_ValidationScriptsPartial.cshtml");
    } *@
    <script>
        //let dataTableResponsive;
        // $(document).ready(() => {
        //     $('div').removeClass('zl-active');
        //     $('#invoiceList').addClass('zl-active');
        //     //loadData();
        // });

        // const loadData = () => {
        //     dataTableResponsive = $('#invoiceTable')
        //         .on('preXhr.dt', function (e, settings, data, a, b) {
        //             //trigger before ajax call
        //             //debugger;
        //             //alert('preXhr');
        //             showWaiting('invoiceTable', '@ResourceFile.PleaseWait', '@ResourceFile.Loading');
        //         })
        //         .on('xhr.dt', function (e, settings, json, xhr) {
        //             //trigger after ajax call
        //             //debugger;
        //             //alert('xhr');
        //         })
        //         .DataTable({
        //             order: [],
        //             processing: true,
        //             serverSide: true,
        //             responsive: true,
        //             rowReorder: false,
        //             select: true,
        //             searching: false,
        //             paging: true,
        //             ordering: false,
        //             searching: false,
        //             filtering: false,
        //             info: true,
        //             lengthMenu: [
        //                 [5, 10, 25, 50],
        //                 [5, 10, 25, 50]
        //             ],
        //             pageLength: 10,
        //             columnDefs: [
        //                 //{ "visible": false, "targets": 0 },
        //                 //and in this case the < a href="//legacy.datatables.net/ref#bStateSave" > bStateSave</a> works regularly ....but then I would like to have responsive columns indicating responsive: {
        //                 {
        //                     details: false,
        //                     breakpoints: [
        //                         { name: 'desktop', width: Infinity },
        //                         { name: 'tablet-l', width: 1200 },
        //                         { name: 'tablet-p', width: 992 },
        //                         { name: 'mobile-l', width: 576 },
        //                         { name: 'mobile-p', width: 320 }
        //                     ]
        //                 },
        //                 {
        //                     targets: [0, 1, 2, 3, 4, 5, 6, 7],
        //                     className: 'dt-center',
        //                 },
        //                 {
        //                     responsivePriority: 0,
        //                     targets: 1,
        //                     render: function (data, type, row, meta) {
        //                         if (data != undefined)
        //                             return splitNumber(data);
        //                         else
        //                             return '';
        //                     }
        //                 },
        //                 {
        //                     targets: 2,
        //                     render: function (data, type, row, meta) {
        //                         return data;
        //                     }
        //                 },
        //                 {
        //                     targets: 4,
        //                     render: function (data, type, row, meta) {
        //                         return `${row.creator}<br/>${data}`;
        //                     }
        //                 },
        //                 {
        //                     targets: 6,
        //                     render: function (data, type, row, meta) {
        //                         return generateDocumentsLink(data);
        //                     }
        //                 },
        //                 {
        //                     responsivePriority: 1,
        //                     targets: 7,
        //                     render: function (data, type, row, meta) {
        //                         if (row.status == @((int)InvoiceStatus.Register))
        //                             return `<button class="btn btn-outline-primary uploadInvoiceImage" style="width:150px">بارگذاری تصویر فاکتور</button>`;
        //                         else if (row.status == @((int)InvoiceStatus.UploadInvoice))
        //                             return `<button class="btn btn-outline-info checkout" style="width:150px">درخواست تسویه</button>`;
        //                         else
        //                             return `<button class="btn btn-outline-primary" disabled style="width:150px">در انتظار پاسخ</button>`;
        //                     }
        //                 }],
        //             rowCallback: function (row, data) {
        //                 //$('td:eq(0)', row).css('text-align', 'center');
        //             },
        //             //ajax: {
        //             //    url: `/api/v1/RequestFacilityInstallment/SelectInstallment2/${$('#drpApprovalFacility').val()}`,
        //             //    type: 'POST',
        //             //    dataSrc: function(data) {
        //             //        data.recordsTotal = data.data.length;
        //             //        data.recordsFiltered = data.data.length;
        //             //        return data.data;
        //             //    },
        //             //    datatype: "json",
        //             //    //contentType: "application/json",
        //             //    contentType: "application/json; charset=utf-8",
        //             //    data: function(input) {
        //             //        debugger;
        //             //        //if ($('#FacilityTypeId').val() != '')
        //             //        //    input.FacilityTypeId = $('#FacilityTypeId').val();

        //             //        return JSON.stringify(input);
        //             //    },
        //             //},
        //             ajax: (data, callback, setting) => {
        //                 getData(data).then(function (_data) {
        //                     callback(_data);
        //                 });
        //             },
        //             drawCallback: function (settings) {
        //                 hideWaiting('invoiceTable');
        //             },
        //             initComplete: function (settings, json) {
        //                 $('#invoiceTable tbody').on('click', 'button.uploadInvoiceImage', function () {
        //                     debugger;
        //                     let data = dataTableResponsive.row(this).data();
        //                     if (data == undefined)
        //                         data = dataTableResponsive.row($(this).parents('tr')).data();

        //                     debugger;
        //                     $('#btnSave').data('invoice-id', data.id);
        //                     $('#btnSaveAndVerifyInvoice').data('invoice-id', data.id);
        //                     $("#Number").val(data.number);
        //                     $('#uploadInvoiceDocumentModal').modal();
        //                 });
        //             },
        //             rowCallback: (row, data, displayNum, displayIndex, dataIndex) => {
        //                 $('td:eq(0)', row).html(displayIndex + 1);
        //                 return row;
        //             },
        //             columns: [
        //                 { "data": null },
        //                 { "data": "amount" },
        //                 { "data": "statusDescription" },
        //                 { "data": "number" },
        //                 { "data": "shamsiCreateDate" },
        //                 { "data": "description" },
        //                 { "data": "invoiceDocuments" },
        //                 { "data": "id" }
        //             ],
        //             language: {
        //                 url: '/new-layout/datatables.net/fa.json'
        //             }
        //         });

        //     const getData = (data) => {
        //         const postData = {
        //             Page: Math.floor(data.start / data.length) + 1,
        //             PageSize: data.length,
        //             SortDirection: null,
        //             SortOrder: null,
        //             FilterList: []
        //         };

        //         return new Promise(function (resolve, reject) {
        //             console.log('Loading data');

        //             $.ajax({
        //                 type: 'post',
        //                 datatype: "json",
        //                 data: JSON.stringify(postData),
        //                 contentType: "application/json; charset=utf-8",
        //                 url: `/api/v1/Invoice/ShopInvoices`,
        //                 success: function (result) {
        //                     if (result != undefined && result.isSuccess == true) {
        //                         resolve({
        //                             data: result.data.data,
        //                             recordsTotal: result.data.totalRowCount,
        //                             recordsFiltered: result.data.totalRowCount
        //                         });
        //                     }
        //                 },
        //                 error: function (error) {
        //                     debugger;
        //                     const exception = getExceptionMessageFromError(error);
        //                     if (exception != null)
        //                         showMessage('@ResourceFile.ErrorTitle', exception, icons.error, '@ResourceFile.Close');
        //                     else
        //                         showMessage('@ResourceFile.ErrorTitle', '@ResourceFile.UnhandledError', icons.error, '@ResourceFile.Close');
        //                 }
        //             });
        //         });
        //     }
        // }

        // $('#btnSave,#btnSaveAndVerifyInvoice').on('click', (e) => {
        //     e.preventDefault();
        //     debugger;
        //     const formIsValid = $('#frmUploadInvoiceDocument').valid();

        //     if (formIsValid) {
        //         const file = $("#InvoiceFile")[0];
        //         if (file.files.length == 0) {
        //             showMessage('@ResourceFile.InfoTitle', 'لطفا تصویر فاکتور را بارگذاری کنید', icons.warning, '@ResourceFile.Close');
        //             return;
        //         }

        //         showWaiting('modalContent', '@ResourceFile.PleaseWait', '@ResourceFile.Loading');
        //         let data = new FormData();
        //         // if (file.files.length > 0) {
        //         //     data.append('InvoiceFile', file.files[0]);
        //         // }
        //         let ajaxUrl = $(e.target).prop("id").toLowerCase() == 'btnsave' ? "/api/v1/Invoice/UploadInvoiceFile" : "/api/v1/Invoice/UploadInvoiceFileAndSendToVerify";

        //         data.append('Id', $(e.target).data('invoice-id'));
        //         data.append('Number', $("#Number").val());
        //         data.append('InvoiceFile', file.files[0]);

        //         $.ajax({
        //             type: 'post',
        //             //dataType: 'json',
        //             //contentType: "application/json; charset=utf-8",
        //             //enctype: 'multipart/form-data',
        //             contentType: false,
        //             processData: false,
        //             url: ajaxUrl,
        //             //data: JSON.stringify(model),
        //             data: data,
        //             success: function (result) {
        //                 $('#btnSave').data('invoice-id', -1);
        //                 $('#btnSaveAndVerifyInvoice').data('invoice-id', -1);
        //                 debugger;
        //                 if (result.isSuccess) {
        //                     dataTableResponsive.page(0);
        //                     dataTableResponsive.ajax.reload(null, false);
        //                     hideWaiting('modalContent');
        //                     showMessage('@ResourceFile.InfoTitle', '@ResourceFile.MessageSuccess', icons.success, '@ResourceFile.Close');
        //                     $('#uploadInvoiceDocumentModal').modal('hide');
        //                 }
        //                 else if (!result.isSuccess) {
        //                     showMessage('@ResourceFile.ErrorTitle', result.message, icons.error, '@ResourceFile.Close');
        //                 }
        //             },
        //             error: function (error) {
        //                 hideWaiting('modalContent');
        //                 const exception = getExceptionMessageFromError(error);
        //                 if (exception != null)
        //                     showMessage('@ResourceFile.ErrorTitle', exception, icons.error, '@ResourceFile.Close');
        //                 else
        //                     showMessage('@ResourceFile.ErrorTitle', '@ResourceFile.UnhandledError', icons.error, '@ResourceFile.Close');
        //             }
        //         });
        //     }
        //     else {
        //         scrollToFirstError();
        //     }
        // });
    </script>
}